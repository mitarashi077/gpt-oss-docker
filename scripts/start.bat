@echo off
echo ===============================================
echo Starting GPT-OSS Docker RAG Environment...
echo ===============================================
cd /d "%~dp0\.."

echo üê≥ Building and starting Docker containers...
docker-compose -f docker/docker-compose.yml up -d

echo ‚è≥ Waiting for services to initialize...
timeout /t 15 /nobreak >nul

echo ü§ñ Pulling Ollama models...
docker exec gpt-oss-ollama ollama pull llama2:7b
docker exec gpt-oss-ollama ollama pull codellama:7b

echo ‚úÖ Checking service health...
echo Ollama API:
curl -s http://localhost:11434/api/tags >nul && echo "‚úÖ Ollama: Ready" || echo "‚ùå Ollama: Not ready"

echo Qdrant Database:
curl -s http://localhost:6333/collections >nul && echo "‚úÖ Qdrant: Ready" || echo "‚ùå Qdrant: Not ready"

echo Embeddings API:
curl -s http://localhost:8001/health >nul && echo "‚úÖ Embeddings: Ready" || echo "‚ùå Embeddings: Not ready"

echo.
echo ===============================================
echo üöÄ GPT-OSS Docker RAG Environment is ready!
echo ===============================================
echo Available services:
echo   ‚Ä¢ Ollama LLM:      http://localhost:11434
echo   ‚Ä¢ Qdrant DB:       http://localhost:6333  
echo   ‚Ä¢ Embeddings API:  http://localhost:8001
echo   ‚Ä¢ RAG Interface:   python scripts\rag_query.py
echo.
echo Quick commands:
echo   ‚Ä¢ Upload document: scripts\upload_doc.bat
echo   ‚Ä¢ Search docs:     scripts\search_doc.bat
echo   ‚Ä¢ RAG chat:        scripts\rag_test.bat
echo   ‚Ä¢ Stop services:   scripts\stop.bat
echo ===============================================
pause